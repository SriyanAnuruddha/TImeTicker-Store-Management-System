package Views;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Controllers.RepairJobController;
import Models.RepairJob;
import Models.Employee;
import Utilities.jPanelGradient;

public class RepairJobUI extends javax.swing.JFrame {

    public RepairJobUI() {
        initComponents();
        Connect();
        
        bluePanel.setOpaque(false);
        purplePanel.setOpaque(false);
        orangePanel.setOpaque(false);
    }
    //create objects
    RepairJobController rjController = new RepairJobController();
    RepairJob rj;

    Employee empObj;

    //data base connection
    Connection con;
    //insert/fetch data
    PreparedStatement pst;

    public void Connect() {
        String url = "jdbc:mysql://localhost:3306/timeticker";
        String user = "root";
        String password = "sysadmin@1122";


        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InvoiceUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con = DriverManager.getConnection(url, user, password);
        } catch (SQLException ex) {
            Logger.getLogger(InvoiceUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new jPanelGradient();
        bluePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cusIdTxt = new javax.swing.JTextField();
        jobNoTxt = new javax.swing.JTextField();
        jobNameTxt = new javax.swing.JTextField();
        cusNameTxt = new javax.swing.JTextField();
        cusEmailTxt = new javax.swing.JTextField();
        issueDateTxt = new javax.swing.JTextField();
        dueDateTxt = new javax.swing.JTextField();
        notifyCusBtn = new javax.swing.JButton();
        addJobBtn = new javax.swing.JButton();
        viewJobBtn = new javax.swing.JButton();
        removeJobBtn = new javax.swing.JButton();
        updateJobBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        clearJobBtn = new javax.swing.JButton();
        stateComboBox = new javax.swing.JComboBox<>();
        orangePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        hoursTxtBtn = new javax.swing.JTextField();
        empIDTxt = new javax.swing.JTextField();
        empNameTxt = new javax.swing.JTextField();
        empRateTxt = new javax.swing.JTextField();
        updateEmpBtn = new javax.swing.JButton();
        allocateEmpBtn = new javax.swing.JButton();
        clearEmpBtn = new javax.swing.JButton();
        addEmpBtn = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        viewEmpDetails = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        empTable = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        purplePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taskTable = new javax.swing.JTable();
        clearTaskBtn = new javax.swing.JButton();
        viewTaskBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bluePanel.setBackground(new java.awt.Color(102, 204, 255));
        bluePanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Customer Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Repair Job NO");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Repair Job Name");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Customer ID");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Customer Email");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Current States");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Issue Date");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Due Date");

        cusIdTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jobNoTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jobNameTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        cusNameTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        cusEmailTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        issueDateTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        dueDateTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        notifyCusBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        notifyCusBtn.setText("Notify Customer");
        notifyCusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notifyCusBtnActionPerformed(evt);
            }
        });

        addJobBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addJobBtn.setText("Add Job");
        addJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJobBtnActionPerformed(evt);
            }
        });

        viewJobBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        viewJobBtn.setText("View Details");
        viewJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJobBtnActionPerformed(evt);
            }
        });

        removeJobBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        removeJobBtn.setText("Remove Job");
        removeJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJobBtnActionPerformed(evt);
            }
        });

        updateJobBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        updateJobBtn.setText("Update Details");
        updateJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJobBtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Enter Repair Job Details");

        clearJobBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        clearJobBtn.setText("Clear");
        clearJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJobBtnActionPerformed(evt);
            }
        });

        stateComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        stateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "work in progress", "completed" }));
        stateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bluePanelLayout = new javax.swing.GroupLayout(bluePanel);
        bluePanel.setLayout(bluePanelLayout);
        bluePanelLayout.setHorizontalGroup(
            bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bluePanelLayout.createSequentialGroup()
                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bluePanelLayout.createSequentialGroup()
                        .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bluePanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(bluePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dueDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bluePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bluePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cusEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bluePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cusNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bluePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cusIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bluePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jobNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bluePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(73, 73, 73)
                                        .addComponent(issueDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(bluePanelLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel3)
                                .addGap(36, 36, 36)
                                .addComponent(jobNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(28, 28, 28)
                        .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewJobBtn)
                            .addComponent(addJobBtn)
                            .addComponent(updateJobBtn)
                            .addComponent(removeJobBtn)
                            .addComponent(notifyCusBtn)
                            .addComponent(clearJobBtn)))
                    .addGroup(bluePanelLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel10)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        bluePanelLayout.setVerticalGroup(
            bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bluePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(42, 42, 42)
                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jobNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addJobBtn))
                .addGap(18, 18, 18)
                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jobNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewJobBtn))
                .addGap(18, 18, 18)
                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cusIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateJobBtn))
                .addGap(22, 22, 22)
                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cusNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeJobBtn))
                .addGap(21, 21, 21)
                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cusEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notifyCusBtn))
                .addGap(18, 18, 18)
                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(issueDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearJobBtn)
                    .addComponent(jLabel8))
                .addGap(23, 23, 23)
                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(dueDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(bluePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        orangePanel.setBackground(new java.awt.Color(255, 153, 0));
        orangePanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Available Employees");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("Hours Worked");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Employee ID");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Employee Name");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setText("Employee H/rate");

        hoursTxtBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        empIDTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        empNameTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        empRateTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        updateEmpBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        updateEmpBtn.setText("Update Details");
        updateEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEmpBtnActionPerformed(evt);
            }
        });

        allocateEmpBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        allocateEmpBtn.setText("Allocate Employee");
        allocateEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocateEmpBtnActionPerformed(evt);
            }
        });

        clearEmpBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        clearEmpBtn.setText("Clear");
        clearEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearEmpBtnActionPerformed(evt);
            }
        });

        addEmpBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addEmpBtn.setText("Add Employee");
        addEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmpBtnActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("Allocate Employee");

        viewEmpDetails.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        viewEmpDetails.setText("View Employees");
        viewEmpDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEmpDetailsActionPerformed(evt);
            }
        });

        empTable.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        empTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Employee Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(empTable);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setText("Enter Employee Details");

        javax.swing.GroupLayout orangePanelLayout = new javax.swing.GroupLayout(orangePanel);
        orangePanel.setLayout(orangePanelLayout);
        orangePanelLayout.setHorizontalGroup(
            orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orangePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hoursTxtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allocateEmpBtn)
                    .addComponent(clearEmpBtn))
                .addGap(11, 11, 11))
            .addGroup(orangePanelLayout.createSequentialGroup()
                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orangePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewEmpDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(orangePanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(orangePanelLayout.createSequentialGroup()
                                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel12)))
                                .addGap(18, 18, 18)
                                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(orangePanelLayout.createSequentialGroup()
                                        .addComponent(empNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(updateEmpBtn))
                                    .addGroup(orangePanelLayout.createSequentialGroup()
                                        .addComponent(empIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(addEmpBtn)))))
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(orangePanelLayout.createSequentialGroup()
                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orangePanelLayout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel2))
                    .addGroup(orangePanelLayout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel16))
                    .addGroup(orangePanelLayout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jLabel17)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        orangePanelLayout.setVerticalGroup(
            orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orangePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orangePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(orangePanelLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(viewEmpDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addEmpBtn)
                    .addComponent(jLabel12)
                    .addComponent(empIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateEmpBtn)
                    .addComponent(empNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(13, 13, 13)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(empRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(allocateEmpBtn))
                .addGap(28, 28, 28)
                .addGroup(orangePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hoursTxtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(clearEmpBtn))
                .addGap(35, 35, 35))
        );

        purplePanel.setBackground(new java.awt.Color(153, 153, 255));

        taskTable.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        taskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Job ID", "Job Name", "Current State", "Assigned to", "Issue Date", "Due Date", "Cutomer Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(taskTable);
        if (taskTable.getColumnModel().getColumnCount() > 0) {
            taskTable.getColumnModel().getColumn(2).setHeaderValue("Current State");
            taskTable.getColumnModel().getColumn(3).setHeaderValue("Assigned to");
            taskTable.getColumnModel().getColumn(4).setHeaderValue("Issue Date");
            taskTable.getColumnModel().getColumn(5).setHeaderValue("Due Date");
            taskTable.getColumnModel().getColumn(6).setHeaderValue("Cutomer Name");
        }

        clearTaskBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        clearTaskBtn.setText("Clear");
        clearTaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTaskBtnActionPerformed(evt);
            }
        });

        viewTaskBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        viewTaskBtn.setText("View All Tasks");
        viewTaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTaskBtnActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Task List");

        javax.swing.GroupLayout purplePanelLayout = new javax.swing.GroupLayout(purplePanel);
        purplePanel.setLayout(purplePanelLayout);
        purplePanelLayout.setHorizontalGroup(
            purplePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(purplePanelLayout.createSequentialGroup()
                .addContainerGap(132, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(purplePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewTaskBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearTaskBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
            .addGroup(purplePanelLayout.createSequentialGroup()
                .addGap(582, 582, 582)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        purplePanelLayout.setVerticalGroup(
            purplePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, purplePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGroup(purplePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(purplePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(viewTaskBtn)
                        .addGap(18, 18, 18)
                        .addComponent(clearTaskBtn)
                        .addGap(52, 52, 52))
                    .addGroup(purplePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(purplePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bluePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(orangePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(purplePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(orangePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bluePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEmpBtnActionPerformed

        int empId = Integer.parseInt(empIDTxt.getText());
        String empName = empNameTxt.getText();

        try {

            pst = con.prepareStatement("update Employee set empName=? where empId=?");
            pst.setString(1, empName);
            pst.setInt(2, empId);

            int result = pst.executeUpdate();//this will return 0/1 depend on the value error wil display

            if (result == 1) {
                JOptionPane.showMessageDialog(rootPane, "updated Employee details ", "Sucess", 1);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "can't update employee :" + empId + " details", "error", 0);
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateEmpBtnActionPerformed

    private void addJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJobBtnActionPerformed
        int jobNo = Integer.parseInt(jobNoTxt.getText());
        String jobName = jobNameTxt.getText();
        int cusID = Integer.parseInt(cusIdTxt.getText());
        String cusName = cusNameTxt.getText();
        String cusEmail = cusEmailTxt.getText();
        String issueDate = issueDateTxt.getText();
        String dueDate = dueDateTxt.getText();
        String state = stateComboBox.getSelectedItem().toString();

        try {

            int result1 = 0;
            int result2 = 0;
            boolean exists1 = false;
            boolean exists2 = false;

            //check InvoiceID or Customer ID is alredy exists
            pst = con.prepareStatement("select jobNo from RepairJob where jobNo=?");
            pst.setInt(1, jobNo);
            ResultSet rs1 = pst.executeQuery();

            if (rs1.next()) {
                exists1 = true;
            }
            pst = con.prepareStatement("select cusID from Customer where cusID=?");
            pst.setInt(1, cusID);
            ResultSet rs2 = pst.executeQuery();

            if (rs2.next()) {
                exists2 = true;
            }

            if (exists1==false && exists2==false) {
                pst = con.prepareStatement("insert into RepairJob (jobNo,jobName,issueDate,dueDate,currentState) values (?,?,?,?,?)");
                pst.setInt(1, jobNo);
                pst.setString(2, jobName);
                pst.setString(3, issueDate);
                pst.setString(4, dueDate);
                pst.setString(5, state);

                result1 = pst.executeUpdate();//this will return 0/1 depend on the value error wil display

                pst = con.prepareStatement("insert into Customer (cusID,cusName,email,jobNo) values (?,?,?,?)");
                pst.setInt(1, cusID);
                pst.setString(2, cusName);
                pst.setString(3, cusEmail);
                pst.setInt(4, jobNo);

                result2 = pst.executeUpdate();//this will return 0/1 depend on the value error wil display
            }else if(exists1==true && exists2==true){
                JOptionPane.showMessageDialog(rootPane, "CustomerID & Repair Job ID  is alredy exists", "error", 0);
            }else if(exists1==true ){
                JOptionPane.showMessageDialog(rootPane, "Repair Job ID="+jobNo+"  is alredy exists", "error", 0);
            }else if(exists2==true ){
                JOptionPane.showMessageDialog(rootPane, "Repair Customer ID="+cusID+"  is alredy exists", "error", 0);
            }
            
                      

            if (result1 == 1 && result2 == 1) {
                JOptionPane.showMessageDialog(rootPane, "Added Repair job details", "Sucess", 1);

                //clean the entered values
                jobNameTxt.setText("");
                cusIdTxt.setText("");
                cusNameTxt.setText("");
                cusEmailTxt.setText("");
                issueDateTxt.setText("");
                dueDateTxt.setText("");
                stateComboBox.setSelectedItem("-");

            }

        } catch (SQLException ex) {
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
            
        }


    }//GEN-LAST:event_addJobBtnActionPerformed

    private void updateJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJobBtnActionPerformed
        int jobNo = Integer.parseInt(jobNoTxt.getText());
        String jobName = jobNameTxt.getText();
        int cusID = Integer.parseInt(cusIdTxt.getText());
        String cusName = cusNameTxt.getText();
        String cusEmail = cusEmailTxt.getText();
        String issueDate = issueDateTxt.getText();
        String dueDate = dueDateTxt.getText();
        String state = stateComboBox.getSelectedItem().toString();

        try {

            pst = con.prepareStatement("update RepairJob set jobName=?,issueDate=?,dueDate=?,currentState=? where jobNo=?");
            pst.setString(1, jobName);
            pst.setString(2, issueDate);
            pst.setString(3, dueDate);
            pst.setString(4, state);
            pst.setInt(5, jobNo);

            int result1 = pst.executeUpdate();//this will return 0/1 depend on the value error wil display

            pst = con.prepareStatement("update Customer set cusName=?,email=?,jobNo=? where cusID=? ");
            pst.setString(1, cusName);
            pst.setString(2, cusEmail);
            pst.setInt(3, jobNo);
            pst.setInt(4, cusID);

            int result2 = pst.executeUpdate();//this will return 0/1 depend on the value error wil display

            if (result1 == 1 && result2 == 1) {
                JOptionPane.showMessageDialog(rootPane, "updated Repair job details", "Sucess", 1);

                //clean the entered values
                jobNameTxt.setText("");
                cusIdTxt.setText("");
                cusNameTxt.setText("");
                cusEmailTxt.setText("");
                issueDateTxt.setText("");
                dueDateTxt.setText("");

            }

        } catch (SQLException ex) {
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "can't update Repair details", "error", 0);
        }


    }//GEN-LAST:event_updateJobBtnActionPerformed

    private void viewJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJobBtnActionPerformed
        int jobNo = Integer.parseInt(jobNoTxt.getText());

        try {
            pst = con.prepareStatement("select * from RepairJob,Customer where RepairJob.jobNo=Customer.jobNo and RepairJob.jobNo=?");
            pst.setInt(1, jobNo);

            ResultSet rs = pst.executeQuery();
            rs.next();

            jobNameTxt.setText(rs.getString(2));
            issueDateTxt.setText(rs.getString(3));
            dueDateTxt.setText(rs.getString(4));
            stateComboBox.setSelectedItem(rs.getString(5));
            cusIdTxt.setText(rs.getString(6));
            cusNameTxt.setText(rs.getString(7));
            cusEmailTxt.setText(rs.getString(8));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Job number is invalid" + jobNo, "error", 0);
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_viewJobBtnActionPerformed

    private void removeJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJobBtnActionPerformed
        int jobNo = Integer.parseInt(jobNoTxt.getText());
        try {
            pst = con.prepareStatement("update Customer set jobNo=? where jobNo=?");
            pst.setNull(1, Types.NULL);
            pst.setInt(2, jobNo);

            pst.executeUpdate();

            pst = con.prepareStatement("delete from RepairJob where jobNo=?");
            pst.setInt(1, jobNo);

            int result = pst.executeUpdate();//this will return 0/1 depend on the value error wil display
            if (result == 1) {
                JOptionPane.showMessageDialog(rootPane, "Delete Repair job " + jobNo, "Sucess", 1);

                //clean the entered values
                jobNoTxt.setText("");
                jobNameTxt.setText("");
                cusIdTxt.setText("");
                cusNameTxt.setText("");
                cusEmailTxt.setText("");
                issueDateTxt.setText("");
                dueDateTxt.setText("");
                stateComboBox.setSelectedItem("-");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Job number is invalid" + jobNo, "error", 0);
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeJobBtnActionPerformed

    private void clearJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJobBtnActionPerformed
        jobNameTxt.setText("");
        cusIdTxt.setText("");
        cusNameTxt.setText("");
        cusEmailTxt.setText("");
        issueDateTxt.setText("");
        dueDateTxt.setText("");
        stateComboBox.setSelectedItem("-");
    }//GEN-LAST:event_clearJobBtnActionPerformed

    private void allocateEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocateEmpBtnActionPerformed

        try {
            int empId = Integer.parseInt(empIDTxt.getText());
            int jobNo = Integer.parseInt(jobNoTxt.getText());

            Double empRate = Double.parseDouble(empRateTxt.getText());
            int workedHours = Integer.parseInt(hoursTxtBtn.getText());

            pst = con.prepareStatement("insert into Working (jobNo,empId,empRate,hours) values (?,?,?,?)");
            pst.setInt(1, jobNo);
            pst.setInt(2, empId);
            pst.setDouble(3, empRate);
            pst.setInt(4, workedHours);

            int result = pst.executeUpdate();//this will return 0/1 depend on the value error wil display

            if (result == 1) {
                JOptionPane.showMessageDialog(rootPane, "Employee " + empId + " is allocated for Job NO " + jobNo, "Sucess", 1);
            }

            //create employee object
            empObj = new Employee();

            pst = con.prepareStatement("select salary from Employee where empId=?");
            pst.setInt(1, empId);

            ResultSet rs = pst.executeQuery();
            rs.next();

            //calculate salary
            double salary = empObj.calculateSalary(rs.getDouble("salary"), empRate, workedHours);

            pst = con.prepareStatement("update Employee set salary=? where empId=?");
            pst.setDouble(1, salary);
            pst.setInt(2, empId);

            pst.executeUpdate();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "can't allocate employee", "error", 0);
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException nfe1) {
            JOptionPane.showMessageDialog(rootPane, "Job No/Empployee ID field is empty", "error", 0);
        }


    }//GEN-LAST:event_allocateEmpBtnActionPerformed

    private void clearEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearEmpBtnActionPerformed
        empIDTxt.setText("");
        empNameTxt.setText("");
        empRateTxt.setText("");
        hoursTxtBtn.setText("");
    }//GEN-LAST:event_clearEmpBtnActionPerformed

    private void stateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateComboBoxActionPerformed

    private void viewTaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTaskBtnActionPerformed
        try {
            pst = con.prepareStatement("select * from Customer JOIN RepairJob ON RepairJob.jobNo=Customer.jobNo JOIN Working ON  Working.jobNo=RepairJob.jobNo JOIN Employee ON Employee.empId=Working.empId");
            ResultSet rs = pst.executeQuery();
            //clean table
            DefaultTableModel model = (DefaultTableModel) taskTable.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                String jobNo = String.valueOf(rs.getInt("jobNo"));
                String jobName = rs.getString("jobName");
                String state = rs.getString("currentState");

                String issueDate = rs.getString("issueDate");
                String dueDate = rs.getString("dueDate");
                String cusName = rs.getString("cusName");
                String employees = rs.getString("empName");

                //create String array for store data into jtable
                String tbData[] = {jobNo, jobName, state, employees, issueDate, dueDate, cusName};
                DefaultTableModel tblModel = (DefaultTableModel) taskTable.getModel();

                //add string array data into jtable
                tblModel.addRow(tbData);

            }

        } catch (SQLException ex) {
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewTaskBtnActionPerformed

    private void addEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmpBtnActionPerformed
        int empId = Integer.parseInt(empIDTxt.getText());
        String empName = empNameTxt.getText();
        try {

            pst = con.prepareStatement("insert into Employee (empId,empName) values (?,?)");
            pst.setInt(1, empId);
            pst.setString(2, empName);

            int result = pst.executeUpdate();//this will return 0/1 depend on the value error wil display

            if (result == 1) {
                JOptionPane.showMessageDialog(rootPane, "Employee " + empId + " is added ", "Sucess", 1);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "can't add employee" + empId, "error", 0);
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addEmpBtnActionPerformed

    private void clearTaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTaskBtnActionPerformed
        //clean table values
        DefaultTableModel model = (DefaultTableModel) taskTable.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_clearTaskBtnActionPerformed

    private void notifyCusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notifyCusBtnActionPerformed
        int jobNo = Integer.parseInt(jobNoTxt.getText());
        try {

            pst = con.prepareStatement("select * from RepairJob,Customer where RepairJob.jobNo=Customer.jobNo and RepairJob.jobNo=?");
            pst.setInt(1, jobNo);

            ResultSet rs = pst.executeQuery();

            rs.next();

            rj = rjController.addRepairJob();
            rj.sendEmail(rs.getString("email"), rs.getString("jobName"), rs.getString("cusName"));
        } catch (SQLException ex) {
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_notifyCusBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MainUI ui = new MainUI();
        ui.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void viewEmpDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEmpDetailsActionPerformed
        try {
            pst = con.prepareStatement("select * from Employee");
            ResultSet rs = pst.executeQuery();

            //clean table
            DefaultTableModel model = (DefaultTableModel) empTable.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                String EmpID = String.valueOf(rs.getInt("empId"));
                String EmpName = rs.getString("empName");

                //create String array for store data into jtable
                String tbData[] = {EmpID, EmpName};
                DefaultTableModel tblModel = (DefaultTableModel) empTable.getModel();

                //add string array data into jtable
                tblModel.addRow(tbData);

            }

        } catch (SQLException ex) {
            Logger.getLogger(RepairJobUI.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_viewEmpDetailsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RepairJobUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RepairJobUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RepairJobUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RepairJobUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RepairJobUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmpBtn;
    private javax.swing.JButton addJobBtn;
    private javax.swing.JButton allocateEmpBtn;
    private javax.swing.JPanel bluePanel;
    private javax.swing.JButton clearEmpBtn;
    private javax.swing.JButton clearJobBtn;
    private javax.swing.JButton clearTaskBtn;
    private javax.swing.JTextField cusEmailTxt;
    private javax.swing.JTextField cusIdTxt;
    private javax.swing.JTextField cusNameTxt;
    private javax.swing.JTextField dueDateTxt;
    private javax.swing.JTextField empIDTxt;
    private javax.swing.JTextField empNameTxt;
    private javax.swing.JTextField empRateTxt;
    private javax.swing.JTable empTable;
    private javax.swing.JTextField hoursTxtBtn;
    private javax.swing.JTextField issueDateTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jobNameTxt;
    private javax.swing.JTextField jobNoTxt;
    private javax.swing.JButton notifyCusBtn;
    private javax.swing.JPanel orangePanel;
    private javax.swing.JPanel purplePanel;
    private javax.swing.JButton removeJobBtn;
    private javax.swing.JComboBox<String> stateComboBox;
    private javax.swing.JTable taskTable;
    private javax.swing.JButton updateEmpBtn;
    private javax.swing.JButton updateJobBtn;
    private javax.swing.JButton viewEmpDetails;
    private javax.swing.JButton viewJobBtn;
    private javax.swing.JButton viewTaskBtn;
    // End of variables declaration//GEN-END:variables
}
